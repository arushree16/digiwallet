{
	"info": {
		"_postman_id": "8a5e6d7f-9c8b-4d5e-a3f2-1b0c7d8e9a6b",
		"name": "DigiWallet API",
		"description": "API collection for the DigiWallet digital wallet system",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Authentication",
			"item": [
				{
					"name": "Register User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"username\": \"testuser\",\n    \"email\": \"testuser@example.com\",\n    \"password\": \"password123\"\n}"
						},
						"url": {
							"raw": "http://localhost:5000/api/auth/register",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"auth",
								"register"
							]
						},
						"description": "Register a new user"
					},
					"response": []
				},
				{
					"name": "Login User",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"email\": \"user@digiwallet.com\",\n    \"password\": \"admin123\"\n}"
						},
						"url": {
							"raw": "http://localhost:5000/api/auth/login",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"auth",
								"login"
							]
						},
						"description": "Login with existing user credentials"
					},
					"response": []
				},
				{
					"name": "Get User Profile",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/api/auth/profile",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"auth",
								"profile"
							]
						},
						"description": "Get current user profile"
					},
					"response": []
				}
			],
			"description": "Authentication endpoints"
		},
		{
			"name": "Wallet Operations",
			"item": [
				{
					"name": "Deposit Funds",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"amount\": 100,\n    \"currency\": \"USD\"\n}"
						},
						"url": {
							"raw": "http://localhost:5000/api/wallet/deposit",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"wallet",
								"deposit"
							]
						},
						"description": "Deposit funds to user's wallet"
					},
					"response": []
				},
				{
					"name": "Withdraw Funds",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"amount\": 50,\n    \"currency\": \"USD\"\n}"
						},
						"url": {
							"raw": "http://localhost:5000/api/wallet/withdraw",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"wallet",
								"withdraw"
							]
						},
						"description": "Withdraw funds from user's wallet"
					},
					"response": []
				},
				{
					"name": "Transfer Funds",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"recipientId\": \"recipient_user_id_here\",\n    \"amount\": 25,\n    \"currency\": \"USD\",\n    \"description\": \"Payment for services\"\n}"
						},
						"url": {
							"raw": "http://localhost:5000/api/wallet/transfer",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"wallet",
								"transfer"
							]
						},
						"description": "Transfer funds to another user"
					},
					"response": []
				},
				{
					"name": "Get Transaction History",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/api/wallet/transactions?page=1&limit=10&type=deposit",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"wallet",
								"transactions"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								},
								{
									"key": "type",
									"value": "deposit"
								}
							]
						},
						"description": "Get user's transaction history"
					},
					"response": []
				},
				{
					"name": "Get Balance",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/api/wallet/balance",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"wallet",
								"balance"
							]
						},
						"description": "Get user's wallet balance"
					},
					"response": []
				}
			],
			"description": "Wallet operation endpoints"
		},
		{
			"name": "Admin",
			"item": [
				{
					"name": "User Management",
					"item": [
						{
							"name": "Get All Users",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{admin_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/api/admin/users?page=1&limit=10",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api",
										"admin",
										"users"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "10"
										}
									]
								},
								"description": "Get all users (admin only)"
							},
							"response": []
						},
						{
							"name": "Get Soft Deleted Users",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{admin_token}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/api/admin/users/deleted?page=1&limit=10",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api",
										"admin",
										"users",
										"deleted"
									],
									"query": [
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "limit",
											"value": "10"
										}
									]
								},
								"description": "Get all soft deleted users (admin only)"
							},
							"response": []
						},
						{
							"name": "Soft Delete User",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{admin_token}}",
											"type": "string"
										}
									]
								},
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/api/admin/users/:userId/soft",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api",
										"admin",
										"users",
										":userId",
										"soft"
									],
									"variable": [
										{
											"key": "userId",
											"value": "REPLACE_WITH_USER_ID",
											"description": "MongoDB ID of the user to soft delete"
										}
									]
								},
								"description": "Soft delete a user (admin only)"
							},
							"response": []
						},
						{
							"name": "Restore Soft Deleted User",
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{admin_token}}",
											"type": "string"
										}
									]
								},
								"method": "POST",
								"header": [],
								"url": {
									"raw": "http://localhost:5000/api/admin/users/:userId/restore",
									"protocol": "http",
									"host": [
										"localhost"
									],
									"port": "5000",
									"path": [
										"api",
										"admin",
										"users",
										":userId",
										"restore"
									],
									"variable": [
										{
											"key": "userId",
											"value": "REPLACE_WITH_USER_ID",
											"description": "MongoDB ID of the user to restore"
										}
									]
								},
								"description": "Restore a soft deleted user (admin only)"
							},
							"response": []
						}
					],
					"description": "User management endpoints"
				},
				{
					"name": "Transaction Management",
					"item": [
						{
							"name": "Get Flagged Transactions",
							"request": {
								"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/api/admin/users?page=1&limit=10",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"admin",
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						},
						"description": "Get all users (admin only)"
					},
					"response": []
				},
				{
					"name": "Get Flagged Transactions",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/api/admin/transactions/flagged?page=1&limit=10",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"admin",
								"transactions",
								"flagged"
							],
							"query": [
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "limit",
									"value": "10"
								}
							]
						},
						"description": "Get flagged transactions (admin only)"
					},
					"response": []
				},
				{
					"name": "Run Fraud Scan",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_token}}",
									"type": "string"
								}
							]
						},
						"method": "POST",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/api/admin/fraud-scan/run",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"admin",
								"fraud-scan",
								"run"
							]
						},
						"description": "Run fraud scan manually (admin only)"
					},
					"response": []
				},
				{
					"name": "Get Total Balance",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/api/admin/balance/total?currency=USD",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"admin",
								"balance",
								"total"
							],
							"query": [
								{
									"key": "currency",
									"value": "USD"
								}
							]
						},
						"description": "Get total balance across all users (admin only)"
					},
					"response": []
				},
				{
					"name": "Get Top Users by Balance",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/api/admin/users/top-by-balance?limit=5&currency=USD",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"admin",
								"users",
								"top-by-balance"
							],
							"query": [
								{
									"key": "limit",
									"value": "5"
								},
								{
									"key": "currency",
									"value": "USD"
								}
							]
						},
						"description": "Get top users by balance (admin only)"
					},
					"response": []
				},
				{
					"name": "Get Top Users by Transaction Volume",
					"request": {
						"auth": {
							"type": "bearer",
							"bearer": [
								{
									"key": "token",
									"value": "{{admin_token}}",
									"type": "string"
								}
							]
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "http://localhost:5000/api/admin/users/top-by-volume?limit=5&days=30",
							"protocol": "http",
							"host": [
								"localhost"
							],
							"port": "5000",
							"path": [
								"api",
								"admin",
								"users",
								"top-by-volume"
							],
							"query": [
								{
									"key": "limit",
									"value": "5"
								},
								{
									"key": "days",
									"value": "30"
								}
							]
						},
						"description": "Get top users by transaction volume (admin only)"
					},
					"response": []
				}
			],
			"description": "Admin endpoints"
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"// Auto-extract token from login response",
					"if (pm.response.code === 200 && pm.request.url.toString().includes('/api/auth/login')) {",
					"    const responseJson = pm.response.json();",
					"    if (responseJson.token) {",
					"        // Store token in variable",
					"        if (responseJson.user && responseJson.user.isAdmin) {",
					"            pm.environment.set('admin_token', responseJson.token);",
					"        } else {",
					"            pm.environment.set('token', responseJson.token);",
					"        }",
					"        console.log('Token saved to environment variables');",
					"    }",
					"}"
				]
			}
		}
	],
	"variable": [
		{
			"key": "token",
			"value": ""
		},
		{
			"key": "admin_token",
			"value": ""
		}
	]
}
